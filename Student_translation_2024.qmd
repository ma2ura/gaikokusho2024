# 監査

監査とは、組織の記録を独立して検査し、財務諸表や非財務的開示が、その企業の実情を真実かつ公正に表現しているかどうかを確認することです。また、記録保持のシステムが法律に従って適切に管理されていることを保証する役割も果たします。監査は企業や公共部門で広く行われる現象となり、学者たちは「監査社会」（Power 1997）を特定し始めました。
政府支出の監査を担当する公的職務の最も古い言及は、1314年のイングランドにおける歳入監査官（Auditor of the Exchequer）に関するものであり（Matthews 2006）、1559年にはエリザベス1世の下で歳入監査官（Auditors of the Imprest）が設立され、歳入支払の監査に正式に責任を持つようになりました。「監査」の現代的概念は、16世紀のイギリスの荘園会計の実践から発展しました。中世ラテン語の「auditus compoti」は、「auditus」（聞くこと）から来ており、当時は識字率が低く、公式な会計検査が口頭で行われていました。監査は当初、主に政府会計のために存在し、記録保持に主に関心が寄せられていました（Matthews 2006）。18世紀の産業革命まで、監査は詐欺検出や財務的責任を果たす分野へと進化することはありませんでした。
20世紀初頭には、「監査人」の試験方法や報告慣行が標準化され、公開企業に対する銀行や株主の役割が増加しました。監査人は、企業の取引を詳細に検査するのではなく、代表的なサンプルを調査するシステムを開発し、これにより監査をより短時間で、低コストで完了できるようになりました。この時期、監査結果は企業の財務諸表に付随する標準的な「独立監査報告書」として定期的に提出されるようになりました。
トランザクションの統計的サンプリングは、現在監査業界の標準となっています。その結果、統計サンプルを実施し、それに基づく意見を行うためのコンピュータツールは、現代の監査の不可欠な部分となっています。重大な誤りや詐欺行為が発見された場合にのみ、包括的な監査が行われます。ビジネスが複雑化するにつれ、その「リスクベースの」監査が進化し、より効率的かつ経済的な監査を実現しています。リスクベースの監査は、財務諸表の情報をレビューした上で、監査が本当に必要かどうかを評価することから始まります。レビューで不利な傾向や不規則性が見つかれば、監査の範囲が適宜拡大されることがあります。監査を通じて、利害関係者はリスク管理、コントロール、企業ガバナンスの有効性を効果的に評価し、改善することができます。
アメリカでは、公開企業の監査は、2002年のサーベインズ・オクスリー法第404条によって設立された公共企業会計監視委員会（PCAOB）によって定められたルールに従っています。このような監査は統合監査と呼ばれ、監査人は財務諸表に関する意見に加えて、財務報告に対する企業の内部統制の有効性についても意見を表明する必要があります。

## 監査におけるコンピュータと監査分析の誕生

私が1971年に統計の学位を取得したとき、統計の雇用市場は非常に限られていました。メインフレームコンピュータが導入されたばかりで、データは80列のホラリスカードに記録されていました。すべてのデータ分析は紙の元帳と加算機で行われていました。マイクロコンピュータ、クラウドコンピューティング、リモートストレージはまだ発明されていませんでした。
50年の歳月がもたらした変化は大きいです。現在、データ分析は多くの人々にとって仕事の中心的な部分となっています。アメリカでは、データ分析の職には約250万の求人（増加中）が存在します。
多くの従業員はMicrosoft ExcelやGoogle Sheetsなどのスプレッドシートプログラムを使用してデータを分析しています。他には、学校で最初に学んだプロプライエタリの統計ソフトウェア（SAS、Stata、SPSSなど）を使用する人もいます。ExcelやSASは広く使われているツールですが、深刻な限界があります。Excelはメタデータ（見出しや説明）を数式やデータと混同しており、すべてが「セル」と呼ばれています。さらに、Excelは非常に遅く、特定のサイズを超えるデータセットを扱うことができず、以前に実施した分析を新しいデータセットで再現することも容易ではありません。SASの主な弱点は、1970年代と1980年代のメインフレーム時代の非常に特定の用途向けに開発されており、最新の分析技術の多くを見逃していることです。また、新しいツールを常に追加している大規模なコミュニティも持っていません。
Excel、SASなどの限界に達した人にとって、次のステップはRまたはPythonを学ぶことです。RとPythonは、データアナリストやデータサイエンティストによって使用される2つの最も人気のあるプログラミング言語です。どちらも無料でオープンソースであり、1990年代初頭に開発されました。Rは（「S」言語のオープンソース版）統計分析用、Pythonは（モンティ・パイソンにちなんで）汎用プログラミング言語として開発されました。機械学習、大規模データセットの操作、複雑なデータビジュアライゼーションを行う場合、両方は分析の標準ツールとなっています。
企業コンピューティングでは、Pythonを必要とするデータ分析の仕事が増えています。一方、学術界、コンサルティング、金融では、Rがユニークなデータクリーニングや分析ツールの拡張セットを提供しています。どちらを学ぶにしても、特に初めてコーディングを学ぶ場合はかなりの時間投資が必要です。Pythonはデータ操作や繰り返し作業に優れており、Rは一時的な分析やデータセットの探索に適しています。
Pythonは、コンピュータ科学者が運営する企業やコードベースの企業で需要があります。これは、他の言語を知っていれば学びやすいためです。Pythonは、データを引き出したり、繰り返し自動分析を実行したり、結果から地図やチャートのようなビジュアライゼーションを生成したりするのに最適です。
Rは、すべての報告書がアドホックなコンサルティング分野で需要があります。どちらの言語も純粋な運用の観点からは特に効率的ではありません。そのため、運用効率を求める場合はC++に目を向けるべきです。過去5年間で、どちらの言語の使用を促進するためのインタラクティブ開発環境（IDE）の競争が大きくなっています。RのIDEはR-Studioと呼ばれ、J. J. Allaireによって管理されています（彼はインディアナ州サウスベンド出身で、何年も前にColdFusionウェブ開発ソフトウェアを開発しました）。Pythonは、プラグインを通じてNetBeansやEclipse IDEでサポートされていますが、Pythonの主な環境はAnacondaであり、独自のPythonバージョンを持ち、Rや他のプログラムもサポートしています。
Rは統計を重視したプロジェクトやデータセットの一時的な分析に適しています。Rはまた、統計の堅実なバックグラウンドを持っていることを前提とするため、学ぶのが難しい場合があります。Pythonは、他の言語で見られるのと同じ制御構造やデータ型を概念的に使用しており、これがコンピュータ科学者がPythonを好む理由です。彼らはRを、統計的なツールでありながら言語であると見なす傾向があり、Rは一般的なプログラミング言語であるPythonと比較されることがあります。RにはReticulateがあり、Pythonで書かれたプログラムをRで使用できるようにします。また、Rcpp（シカゴのDirk Eddelbuettelによって書かれ、維持されている）もあり、C++プログラムをRで使用できるようにします。強力ではあるものの、Rは一般的なプログラミング言語の開発者にとっては非常に不慣れで奇妙に見えるかもしれません。
あなたの分析がどれほど優れていても、それを伝えられなければ無価値です。報告書の作成、ウェブやGitHubなどでの公開は、データアナリストにとってすべて重要な部分です。この目的を支援するために、Rにはknitrという報告書作成ツールがあります（著者自身は小文字のkでスペルします）。Pythonには、その対極となるJupyterノートブックがあります（現在Rでも使用可能ですが）。概念的には似ていますが、それぞれの目的は大きく異なります。探索的分析には特に適していないものの、knitrは動的データ報告生成の強力なツールであり、プログラマーのツールボックスに加える価値があります。
たとえば、CSVファイルにいくつかのエントリーがあり、これを定期的に誰か（または自分）に視覚的に提示したいとします。Excelで開いてピボットテーブルとグラフを追加することもできますが、次にこのデータを1つ以上のXMLファイルやデータベースのデータと結合する必要があると仮定しましょう—これはスクリプト作業になります。Excelも役立つことができますが、非常に面倒です。Pythonでもこの作業はできますが、準備が整うまでに多くのライブラリを学ぶ必要があります。しかし、knitrとR Markdownは、Rのすべてのグラフィックおよびデータ処理ツールを含むPDF報告書を簡単に生成できます。さらに、Rは統計と機械学習をつなげるため、機械学習や人工知能の概念は統計から派生しています。Pythonベースの機械学習に関する文献の多くは、基礎的な統計概念を完全に見落としており、その結果、Rが機械学習アルゴリズムの開発においてより効果的です。これらの文献は、Pythonの科学的スタックを理解しているコンピュータ科学者によって書かれており、特定の目標を達成する方法を示す際に、形式的な手順で示すことが多いですが、裏で何が起こっているのかについての洞察を提供することはあまりできません。

## 財務会計

会計とは、企業体に関する財務情報を株主や経営者などの利用者に伝達するプロセスである。そのコミュニケーションは一般的に、経営者の支配下にある経済的資源を金銭的な用語で示す財務諸表の形で行われる。会計学の原則は、会計、簿記、監査と名付けられた実務の3部門で企業体に適用される。会計とは、米国公認会計士協会（AICPA）により、「少なくとも部分的には財務的性格を持つ取引や事象を、重要な方法で、かつ金銭の観点から記録、分類、要約し、その結果を解釈する技術」と定義されている。今日、会計が「ビジネスの言語」と呼ばれているのは、会計が事業体に関する財務情報をさまざまな人々に報告する手段だからである。事業体内の人々への報告に集中する会計は管理会計と呼ばれ、従業員、経営者、オーナー経営者、監査人への情報提供に使用される。管理会計は、主に経営上または営業上の意思決定を行うための基礎を提供することに関係する。事業体の外部の人々に情報を提供する会計は財務会計と呼ばれ、現在および潜在的な株主、銀行やベンダーなどの債権者、財務アナリスト、エコノミスト、政府機関などに情報を提供する。これらの利用者はそれぞれ異なるニーズを持っているため、財務会計の表示は非常に構造化されており、管理会計よりも多くのルールが適用される。ある管轄区域における財務会計を規定するルール体系は、一般に公正妥当と認められた会計原則（GAAP）と呼ばれる。その他の規則には、国際財務報告基準（IFRS）や米国会計基準（US GAAP）がある。会計基準は、歴史的に米国公認会計士協会(AICPA)が証券取引委員会の規制に従って設定してきた。AICPAは1939年に初めて会計手続委員会を設立し、1951年に会計原則委員会に取って代わった。1973年、会計原則委員会は、財務会計財団の監督の下、財務会計基準審議会（FASB）に取って代わられ、財務会計基準諮問委員会が会計基準に関する助言と意見提供の役割を果たした。米国の会計基準の決定に関与している他の組織には、1984年に設立された政府会計基準審議会（GASB）や公開会社会計監視委員会（PCAOB）がある。
2008年、FASBはFASB会計基準コーディフィケーションを発表し、数千に及ぶ米国会計基準の公布を約90の会計トピックに再編成した。2008年、証券取引委員会は、米国が将来的に一般に認められた会計原則を放棄し、ロンドンに本拠を置く国際財務報告基準を使用する代わりに、世界100カ国以上の仲間入りをする可能性のある予備的な「ロードマップ」を発表した。2010年現在、コンバージェンス・プロジェクトは進行中で、FASBはIASBと日常的に会合を開いている。米国証券取引委員会（SEC）は、2014年までに米国で国際財務報告基準を完全に採用することを目指すと表明した。米国会計基準と国際財務報告基準（IFRS）のコンバージェンスに伴い、国際財務報告基準の最高権威である国際会計基準審議会の重要性が米国で高まっている。


会計の産物： 財務諸表
財務諸表は主に4つある。貸借対照表、損益計算書、キャッシュフロー計算書、株主資本等変動計算書である。
貸借対照表は、ある時点での企業が保有する資産と負債を示す。損益計算書は、企業が一定期間にどれだけのお金を稼ぎ、使ったかを示す。キャッシュフロー計算書は、企業間のお金のやり取りを示す。
キャッシュフロー計算書は、一定期間における企業と外部とのお金のやり取りを示す。第4の財務諸表は「株主資本等変動計算書」と呼ばれ、会社の株主の持分の経年変化を示す。

### 貸借対照表

貸借対照表は、企業の資産、負債、株主資本に関する詳細な情報を提供する。資産とは、企業が所有する価値のあるものである。これは通常、売却可能であるか、または会社が製品を製造したり、販売可能なサービスを提供するために使用されたりすることを意味する。資産には、工場、トラック、設備、在庫などの物的財産が含まれる。また、商標や特許のように、触れることはできないが存在し価値を持つものも含まれる。また、現金そのものも資産である。企業が行う投資もそうである。負債とは、企業が他人に対して負っている金額のことである。これには、新製品を発売するために銀行から借りたお金、建物を使用するための家賃、資材のためにサプライヤーに支払うべきお金、会社が従業員に支払うべき給与、環境浄化費用、政府に支払うべき税金など、あらゆる種類の債務が含まれる。負債には、将来顧客に商品やサービスを提供する義務も含まれる。株主資本は、資本金や純資産と呼ばれることもある。これは、企業がすべての資産を売却し、すべての負債を返済した場合に残るお金である。この残ったお金は株主、つまり会社のオーナーのものである。企業の貸借対照表は、上に示した基本的な会計方程式のように設定される。貸借対照表の左側には資産が記載され、右側には負債と株主資本が記載される。右側には負債と株主資本が記載されている。貸借対照表では、資産が一番上、負債がそれに続き、株主資本が一番下に記載されることもある。資産は一般的に、現金化されるまでの期間に基づいて記載される。流動資産とは、企業が1年以内に現金に換えられると予想されるものである。
良い例が在庫である。ほとんどの企業は、1年以内に在庫を売却して現金化することを期待している。固定資産とは、1年以内に現金化される見込みのないもの、あるいは売却に1年以上かかるものを指す。固定資産には有形固定資産も含まれる。有形固定資産とは、事業の運営に使用されるが、売却できない資産のことで、トラック、オフィス家具、その他の不動産などがある。負債は一般的に、支払期日に基づいて表示される。負債には、流動負債と長期負債がある。流動負債は、企業が年内に完済する見込みの債務である。固定負債は、返済期限が1年以上先の債務である。
株主資本とは、株主が自社株に投資した金額に、創業以来の会社の損益を加減したものである。企業が利益を留保する代わりに分配することもある。このような分配は配当と呼ばれる。貸借対照表は、報告期間の終わりにおける企業の資産、負債、株主資本のスナップショットを示す。これは、期間中の口座への出入りを示すものではない。

### 損益計算書

損益計算書は、特定の期間（通常、1年または1年の一部）に企業がどれだけの収益を上げたかを示す報告書である。損益計算書には、その収益を得るためにかかった費用や経費も記載されます。損益計算書の文字通り「一番下の行」には、通常、会社の純損益が記載されています。これは、その期間中に会社がどれだけの利益を得たか、あるいは失ったかを示すものである。損益計算書はまた、一株当たり利益（または「EPS」）を報告する。この計算では、会社がその期間の純利益のすべてを分配することを決定した場合、株主が受け取る金額がわかる。

### キャッシュフロー計算書

キャッシュフロー計算書は、企業の現金の流入と流出を報告する。企業が経費を支払い、資産を購入するためには、手元に十分な現金が必要であるため重要である。損益計算書は、企業が利益を上げたかどうかを知ることができるが、キャッシュフロー計算書は、企業が現金を生み出したかどうかを知ることができる。キャッシュフロー計算書は、ある時点における絶対的な金額ではなく、経時的な変化を示す。キャッシュフロー計算書は、企業の貸借対照表と損益計算書の情報を使用し、並べ替える。キャッシュ・フロー計算書は、運転資本計算書に一般化されることもあり、その場合、現金は、より一般的な流動資産と流動負債に置き換えられる。流動資産と流動負債は、いずれも営業サイクル（通常1年）内に期限が到来すると予想されるため、いわゆる 「ニアキャッシュ」となる。キャッシュフロー計算書の一番下の行は、その期間の現金の純増減を示す。キャッシュ・フロー計算書は、主に3つの部分に分かれている。各パートは、(1)営業活動、(2)投資活動、(3)財務活動の3つの活動から得られるキャッシュフローを検討する。

## 会計の方法論

財務会計は、企業がその富に影響を与える重要な経済取引を記録し報告するための手段である。それは基本的な「原則」が企業の富に影響を与える経済的なでき事(トランザクション)の記録に緩く適用される準自動システムである。これらの詳細な取引は、勘定科目表と呼ばれる企業固有の分類に基づいて勘定科目にまとめられる。勘定科目はさらに整理され、一般に公正妥当と認められた会計原則（GAAP）に従って報告のために要約される。
今日実践されている会計の視点は、アル・クワリズミーによる8世紀の代数的平衡と算術操作のシステムに由来している。このシステムは本質的に直線的であり、価格とコストは加算的であると仮定され、一般的に取引全体にわたって固定的であると考えられている。しかし実際には、多くの経済プロセスは非線形であり、データは不完全で不正確な場合がある。その結果、現代の会計報告は、会計システムの扱いやすさと拡張性を促進するために行われる経済的近似値となっている。現代の監査人が採用する視点は、会計報告におけるトレードオフを反映しており、多くの標準的な監査手続は、財務会計固有の不確実性に対応している。
一般に公正妥当と認められた会計原則（GAAP）
一般に公正妥当と認められた会計原則（GAAP）とは、一般に会計基準として知られる、特定の法域で使用される財務会計のガイドラインの標準的な枠組みを指す。GAAPは会計士が記録し、要約し、そして財務諸表の作成で従う基準、慣習および規則を含んでいる。財務会計は客観的に組み立てられ、報告されなければならない情報である。このような情報に依存しなければならない第三者は、意図的か否かにかかわらず、データに偏りや矛盾がないことを保証される権利を有する。このような理由から、財務会計はGAAPに依存している。原則は、マッチングの概念のような伝統から派生したものである。財務諸表の報告（監査、編集、レビューなど）において、作成者／監査人は、読者に対し、財務諸表に含まれる情報がGAAPに準拠しているか否かを示さなければならない。

## 理論

会計の基本方程式は、資産＝負債＋株主資本である。これが貸借対照表である。貸借対照表の基礎は、収益-費用＝純利益または純損失である損益計算書から始まる。これに続くのが利益剰余金計算書で、期首利益剰余金＋当期純利益-配当金＝期末利益剰余金、または期首利益剰余金-当期純損失-配当金＝期末利益剰余金となる。

## 前提条件

1. 会計主体： 事業が所有者や他の事業から分離されていることを前提とする。収益と費用は、個人的な費用とは別に管理されなければならない。
2. 継続企業（Going Concern）：事業が無期限に運営されることを前提とする。清算が確実な場合のみ、この仮定は適用されない。
3. 通貨単位の原則：安定した通貨を記録単位とする。FASBは、インフレ調整前の米ドルの名目価値を記録通貨単位として認めている。
4. 期間原則：企業の経済活動を人工的な期間に分割できることを意味する。

## 原則

1. 歴史的原価主義の原則 歴史的原価主義の原則は、ほとんどの資産・負債に ついて、公正市場価値ではなく、取得原価に基づいて会計処理し、報告することを求めている。この原則は、信頼性の高い情報を提供する（主観的で偏った可能性のある市場価値を提供する機会をなくす）が、関連性はあまり高くない。そのため、公正価値を使用する傾向がある。現在、ほとんどの負債と有価証券は時価で報告されている。
2. 収益認識の原則は、現金の受領時ではなく、収益が(1)実現または実現可能であり、(2)稼得された時に計上することを要求している。この会計方法は発生主義会計と呼ばれる。
3. マッチングの原則。費用は、それが合理的である限り、収益と一致させなければならない。費用は、仕事が行われた時や製品が生産された時ではなく、仕事や製品が実際に収益に貢献した時に認識される。収益との関連性が立証できない場合に限り、費用は当期の費用として計上することができる（例えば、事務所給与やその他の管理費など）。この原則により、実際の収益性や業績をより高く評価することができる（収益を得るためにどれだけの費用が使われたかを示す）。減価償却費や売上原価は、この原則を適用した良い例である。
4. フル・ディスクロージャーの原則。開示される情報の量や種類は、情報量が多ければ多いほど準備や利用にコストがかかるため、トレードオフ分析に基づいて決定されるべきである。開示される情報は、合理的なコストに抑えつつ、判断するのに十分なものでなければならない。情報は、財務諸表本体、注記、または補足情報として表示される。

## 制約事項

1.客観性の原則：会計士が提供する会社の財務諸表は、客観的な証拠に基づくべきである。
2.重要性の原則：報告される項目は、その重要性を考慮しなければならない。合理的な個人の意思決定に影響を与えるような項目は重要であるとみなされる。
3.一貫性の原則：企業が毎年同じ会計原則と方法を使用することを意味する。
4.保守主義の原則：2つの解決策から選択する場合、資産や利益を過大に計上する可能性が最も低い方を選ぶべきである。


3. マッチングの原則。費用は、それが合理的である限り、収益と一致させなければならない。費用は、仕事が行われた時や製品が生産された時ではなく、仕事や製品が実際に収益に貢献した時に認識される。収益との関連性が立証できない場合に限り、費用は当期の費用として計上することができる（例えば、事務所給与やその他の管理費など）。この原則により、実際の収益性や業績をより高く評価することができる（収益を得るためにどれだけの費用が使われたかを示す）。減価償却費や売上原価は、この原則を適用した良い例である。
4. 完全開示の原則。開示される情報の量や種類は、情報量が多ければ多いほど準備や利用にコストがかかるため、トレードオフ分析に基づいて決定されるべきである。開示される情報は、合理的なコストに抑えつつ、判断するのに十分なものでなければならない。情報は、財務諸表本体、注記、または補足情報として表示される。

制約事項
 1. 客観性の原則：会計士が提供する会社の財務諸表は、客観的な証拠に基づいていなければならない。
2. 重要性の原則：報告する際には、項目の重要性を考慮しなければならない。合理的な個人の意思決定に影響を与えるような項目は重要であるとみなされる。
3.  一貫性原則:  企業が毎年同じ会計原則と方法を使用することを意味します。 
4.  保守主義の原則：2つの解決策から選択する場合、資産や所得を過大評価する可能性が最も低い解決策を選択する必要があります。

会計処理と主要文書ファイル 
会計エントリと文書ファイル 
アル•クワリズミの代数的会計帳簿記法は、会計の普遍的基準となったエラー制御、名目勘定、実質勘定に発展した。12世紀までに、フィボナッチはこれらをラテン語で体系化し、流通させた。この研究は、15世紀にイタリア人のルカ•パチョーリによって、初めて印刷され広く配布されたビジネス数学のテキストの1つとして普及した。これは、今日使用されている複式簿記法であり、借方と貸方の観点から考えられている。パチョーリの最も重要な貢献は、 
1.  どの口座から借方記入し、どの口座から貸方記入するかを決める際、均衡と完了のプロセスは会計方程式に従います:  純資産  =  資産  －  負債。
 2.  会計方程式はエラー検出ツールとして機能します。どの時点でも、すべての口座の借方の合計が等しくない場合は、エラーが発生したことになる。
 3.  複式簿記システムでは、各会計項目は、資産、負債、収益、費用、または資本勘定について関連する一組の金融取引を記録する。
 4.  企業の富の増加または減少につながる経済的事象を記録する文書ファイルは「仕訳帳」と呼ばれます。 そして、その取とは引が「仕訳入力」となります。
 5.  パチョーリの言う「仕訳帳」とは「Daybook」のことで、この用語は  20  世紀まで会計の分野で使用されていました。
 パチョーリによって普及されたシステムは、世界中の会計入門コースの標準的な内容となっています。 会計方程式アプローチの目的上、すべての勘定は、資産、負債、収益/収入、費用、または資本利得/損失の５種類に分類されます。ある勘定が増加または減少すると、別の勘定も同じように減少または増加します。

 会計帳簿 
各金融取引は、借方の合計が総勘定元帳の貸方の合計と等しくなるように、すなわち勘定残高が均衡するように、財務会計システム内の少なくとも2つの異なる実勘定元帳に記録される。この取引は、1つの勘定に「借方記入」(Dr.)として記録され、もう1つの勘定に「貸方記入」(Cr.)として記録される。借方項目は総勘定元帳の借方（左側）に記録され、貸方項目は総勘定元帳の貸方（右側）に記録される。ある勘定科目の借方側の記入の合計が、同じ実勘定科目の貸方側の記入の合計より大きい場合、その勘定科目は借方残高を持つという。　　
複式簿記は実勘定元帳でのみ使用される。通常、実台帳システムの一部を構成しない仕訳帳（日計表）では使用されない。仕訳帳の情報は総勘定元帳で使用され、仕訳帳から作成された財務情報の整合性を保証するのは実勘定元帳である（ただし、仕訳帳に記録された情報が正しいことが条件）。売上高のような非常に頻度の高い取引については、通常、特別な目的の「売上高仕訳帳」が作成され、その合計が定期的（例えば日次）に総勘定元帳に転記される。ビジネスにおける実勘定とは、ある時点における資産、負債、株主資本の金額を記録したものである。
名目勘定は、1年間などの一定期間における事業の収益と費用をまとめたものである。帳簿管理者の記録管理プロセスは、基本的に同じである：勘定科目を採用し、帳簿のバランスを保つために借方と貸方を使用して原始エントリを作成し、期間の利益を正しくするために調整エントリを作成し、年末に帳簿を閉じます。企業は2種類の勘定科目を使用する：
1. 実質勘定とは、貸借対照表に計上される勘定で、企業の資産、負債、所有者の持分を要約したものである。実質」というラベルは、このタイプの勘定科目が継続的で永続的な性質を持つことを意味する。リアル勘定は、事業開始日から最終日まで有効である。(実質勘定は、一時的に残高がゼロになることもあるが、その場合は貸借対照表には計上されない）。実質勘定には、最終日の営業終了時など、特定の時点における資産、負債、所有者持分の残高が含まれる。実質勘定の残高は、勘定の増加額から減少額を差し引いた純額である。
2. 名目（収益と費用）勘定は年度末に閉鎖される。これらの勘定科目は、その年の売上と費用の金額を蓄積する役目を終えた後、その残高は閉鎖される。残高はゼロにリセットされ、新年度を迎える。名目勘定は、翌年度の売上高と費用の蓄積のために空にされる。
残高試算表には、元帳の勘定残高がすべてリストアップされる。リストは2列に分かれており、左側の列に借方残高、右側の列に貸方残高が配置される。もう1つの欄には、元帳の勘定科目名が記載される。これらの勘定科目は、「勘定科目表 」で会社の勘定科目として決定される。借方欄の合計が貸方欄の合計と等しくなければならないので、これを 「残高 」と呼ぶ。総収入が総支出に等しいとき、会計方程式は真でなければならない：資産＝負債＋資本
すなわち、「名目 」勘定が等しいことは、「実質 」勘定が等しいことを意味する。借方と貸方を記録するシステムは、「名目」勘定と「実質」勘定を同期させるように設計されている。
資本の現代用語は「オーナーズ・エクイティ（Owners Equity）」であり、株式と会社の利益剰余金から配当金を差し引いたものである。資本金の期間ごとの変動は「利益」または「損失」であり、資本金のうち利益剰余金と呼ばれる部分がこれにあたる（残りは持分から）。
　勘定科目が均衡を保つためには、ある勘定科目の変動と別の勘定科目の変動を一致させる必要がある。これらの変更は、勘定表に適用される借方と貸方の記録システムで行われる。仕訳入力で記録される各取引には借方と貸方があり、これらの借方と貸方は、勘定表の勘定科目の特定の分類に応じて次のような効果を持つ。
このような 「エラーチェック 」システムの必要性は、コンピュータに取って代わられたとはいえ、会計の伝統の一部であり、今後もしばらくは必要であろう。借方、貸方、仕訳帳、元帳など、これらの構成要素はそれぞれ、現代のコンピュータシステムのプロセスやファイルシステムに反映されている。

監査分析のためのコードとデータのリポジトリ
Code chunks in many places in Audit Analytics text contains references to external. CSV形式のファイル。ここれらのファイルはGitHubのwestland/auditanalyticsリポジトリにホストされています本書のコードを書くにあたって、ファイルを.CSV形式にすることを意識的に決定した。会計士が実務で遭遇するデータソースの多くは、Excelやその他のスプレッドシート形式でデータを保持している。そうでない場合、データベースのテーブルと同様に、それらは再フォーマットされ、スプレッドシートとして監査人に提示されることがある。最終章では、CSV形式で会計取引の「テストデッキ」をシミュレートしているが、これは、このような形式が、会計および財務データの「ネイティブ」形式であるためである。とはいえ、教育的な観点から、この本のリポジトリからダウンロードするファイルについては CSV 形式を維持することにしました。それ以外のGitHubのwestland/auditanalyticsリポジトリは、RandRStudioによって採用されたリポジトリ標準に従っています。Audit Analyticsテキストで使用される生の(.CSV)データファイルは、GitHubからwestland/auditanalyticsパッケージをインストールし、system.file()を使用して特定のファイルを参照することで、Rworkspaceで使用できるようになります。ファイルのパスはsystem.file()によって返され、そのパスを必要とする他のコマンドに挿入できます。次のコード・チャンクはその例を示している。

本書に必要なパッケージ
本書の各章のコードには、library(「package_name」)コマンドで指定されたRパッケージが必要です。これらのパッケージには、didyverse、ggplot2、lubridate、kerasなどがあります。 Kerasは、機械学習言語TensorflowのAPIであり、kerasのインストールとは別にkerasのインストールが必要です。Tensorflowのインストールに関する一般的な注意事項は、後述します。Python環境をインストールする必要があります。詳細はhttps://www。tensorflow.org/を参照してください。パッケージのインストール パッケージのインストールには2つのステップがあります。tidyverseパッケージをインストールするには、例えば、install.packages(「tidyverse」)とタイプし、Enter/Returnキーを押し、前にインストールされたパッケージをロードするには、elibrary(tidyverse)とタイプします。Tensorflowのインストール Tensorflowは、本書で使用する機械学習パッケージです;Tensorflowへのコマンドは、KerasAPIを使用して呼び出されます。 TensorflowRパッケージを使用する前に、Rinstall_tensorflow()関数を使用してTensorFlowをシステムにインストールする必要があります。この関数は、TensorFlowのインストールに必要なさまざまなステップを簡単に使用できるラッパーを提供します。TensorFlowforRistestedは、以下の64ビットシステムに対応しています： 1.Ubuntu16.04以降 2.Windows7以降 3.macOS10.12.6(Sierra)以降(GPU非対応)
まず、GitHubまたはCRANリポジトリからtensorflow Rパッケージをインストールし（検索するとサイトが見つかります）、install_tensorflow()関数を使ってTensorFlowをインストールします。install_tensorflow()はreticulate::py_installのラッパーです。
インストールが成功したことを確認するには
これは、tensorflow Rパッケージでの使用に適したTensorFlowのデフォルトのインストールを提供します。Tensorflowには他にも多くのことがあります。興味のある読者は、https://tensorflow.rstudio.com/ と https:// www.tensorflow.org/ にある資料を確認してください。
コードの'コピー＆ペースト'に関する注意点 本書のコードはパッケージリポジトリで入手可能だが、読者は状況によっては本書から直接コードを'コピー＆ペースト'をしたくなるかもしれない。残念なことに、多くの組み込みマシンエディターは、引用符を明確な開閉形に変換しようとします。コピー＆ペースト」されたコードには、追加の編集が必要になる場合があることに注意してください。

# 